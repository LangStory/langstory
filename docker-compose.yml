services:
  langstory_api:
    hostname: langstory-api
    volumes:
      - ./api:/api
      - ./tests:/api/tests
      - ./pytest.ini:/api/pytest.ini
      - ./.pytest_cache:/api/.pytest_cache
    build:
      context: .
      dockerfile: dockerfiles/api.Dockerfile
      args:
        - ENVIRONMENT=dev
    env_file:
      - .env
    depends_on:
      langstory_db:
        condition: service_healthy
  langstory_client:
    hostname: langstory-client
    build:
      context: .
      dockerfile: dockerfiles/client.Dockerfile
    volumes:
      - ./client:/client
  langstory_db:
    hostname: langstory-db
    image: ankane/pgvector:v0.5.1
    volumes:
      - ./db_setup.sql:/docker-entrypoint-initdb.d/db_setup.sql
      - ./.data/pg_data:/var/lib/postgresql/data/
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${DB_USER}"]
      start_interval: 2s
      interval: 3s
      timeout: 5s
      retries: 5
  langstory_nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
  langstory_langfuse:
    image: ghcr.io/langfuse/langfuse:2
    hostname: langstory-langfuse
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgres://${DB_USER}:${DB_PASSWORD}@langstory-db:5432/langfuse
      - NEXTAUTH_URL=${NEXTAUTH_URL}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - SALT=${SALT}
      - HOSTNAME=0.0.0.0
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:3000/api/public/health"]
      start_interval: 2s
      interval: 30s
      timeout: 10s
      retries: 5
    depends_on:
      langstory_db:
        condition: service_healthy